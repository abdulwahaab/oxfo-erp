@page "/dyeing/price/info/{VendorId?}/{EntityId?}"

@using OxfoHome.DAL
@using OxfoHome.DAL.DTOs
@using OxfoHome.DAL.Services

<PageTitle>@(!string.IsNullOrWhiteSpace(EntityId) ? "Edit Color Rate - OxfoHome" : "Add Color Rate - OxfoHome")
</PageTitle>

<BackTo Link="@($"/dyeing/price/list/{VendorId}")" Title="Back to manage color rates" />

<div class="row mt-3">
    <h3>@(!string.IsNullOrWhiteSpace(EntityId) ? "Edit Color Rate" : "Add Color Rate")</h3>
    <div class="col-md-8">
        <div class="card">
            <div class="card-body">
                <h5>Vendor Name: <u><a href="@($"/dyeing/vendor/detail/{VendorId}")">@dyeingVendorName</a></u></h5>
                <EditForm Model="entity" OnSubmit="OnSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-card">
                        <div class="row">
                            <div class="form-group col-lg-6">
                                <label for="color">Color</label>
                                <InputText @bind-Value="entity.Color" focus class="form-control" type="text" id="color"
                                    required />
                            </div>

                            <div class="form-group col-lg-6">
                                <label for="price">Price Per Kilogram</label>
                                <InputNumber @bind-Value="entity.Price" focus class="form-control" type="text"
                                    id="price" required />
                            </div>

                            <div class="form-group col-lg-12 mt-3">
                                <label for="notes">Notes</label>
                                <MultilineInput @bind-Value="entity.Notes" class="form-control" id="notes" />
                            </div>

                            <div class="form-group col-lg-12 mt-3 d-flex justify-content-end">
                                <button type="submit" class="btn btn-primary">
                                    @(!string.IsNullOrWhiteSpace(EntityId) ? "Update Color Rate" : "Add Color Rate")
                                </button>
                            </div>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@inject IDyeingService service
@inject IEncryptionService encryptor
@inject NavigationManager Navigation

@code {
    [Parameter] public string? VendorId { get; set; }
    [Parameter] public string? EntityId { get; set; }
    private DyeingColorRateDTO? entity { get; set; } = new();
    private string dyeingVendorName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (!string.IsNullOrWhiteSpace(VendorId))
            {
                if (!string.IsNullOrWhiteSpace(EntityId))
                {
                    int id = Convert.ToInt32(encryptor.Decrypt(EntityId));
                    entity = await service.GetPriceByID(id);
                    if (entity == null)
                    {
                        //show invalid URL error via toaster
                    }
                }
                //get vendor name for the display
                int vendorId = Convert.ToInt32(encryptor.Decrypt(VendorId));
                DyeingVendorDTO vendor = await service.GetByID(vendorId);
                dyeingVendorName = vendor.Name;
            }
            else
            {
                Navigation.NavigateTo("/dyeing/vendor/list");
            }
        }
        catch (Exception ex) { throw ex; }
    }

    private async void OnSubmit(EditContext editContext)
    {
        try
        {
            if (editContext!.Validate())
            {
                if (!string.IsNullOrWhiteSpace(EntityId))
                {
                    // Update existing record
                    bool isUpdated = await service.UpdatePrice(entity);
                    if (isUpdated)
                    {
                        Navigation.NavigateTo("/dyeing/price/list/" + VendorId);
                    }
                }
                else
                {
                    // Add new record
                    entity.DyeingVendorId = Convert.ToInt32(encryptor.Decrypt(VendorId));
                    bool isAdded = await service.AddPrice(entity);
                    if (isAdded)
                    {
                        Navigation.NavigateTo("/dyeing/price/list/" + VendorId);
                    }
                }
            }
        }
        catch (Exception ex) { throw ex; }
    }
}
