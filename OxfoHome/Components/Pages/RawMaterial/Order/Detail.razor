@page "/raw-material/order/detail/{EntityId}"

@using OxfoHome.DAL
@using OxfoHome.DAL.DTOs
@using OxfoHome.DAL.Services

<PageTitle>Raw Material Order Details - OxfoHome</PageTitle>

<BackTo Link="/raw-material/order/list" Title="Back to raw material orders" />

@if (entity != null)
{
    <div class="w-75 mt-3">
    <div class="row">
        <div class="col-md-6">
            <h3>Raw Material Order Details</h3>
        </div>
        <div class="col-md-6">
            <LinkButton Title="Edit" Link="@($"/raw-material/order/info/{EntityId}")" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <DetailDisplay Data="entity" />
        </div>
        <div class="col-md-12 mt-3">
            <h4>Order Items</h4>
            <div class="card">
                <div class="card-body">
                    <table class="table table-hover table-striped">
                        <thead>
                            @* <th>Item Number</th> *@
                            <th>Item Name</th>
                            <th>Unit</th>
                            <th>Price Per Unit</th>
                            <th>Quantity</th>
                        </thead>
                        <tbody>
                            @foreach (var item in orderItems)
                                {
                                    <tr>
                                        @* <td>@item.ItemNumber</td> *@
                                        <td>@item.ItemName</td>
                                        <td>@item.PriceUnit</td>
                                        <td>@item.PricePerItem</td>
                                        <td>@item.QuantityOrdered</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <Loader />
}

@inject IOrderService service
@inject IEncryptionService encryptor

@code {
    public RawMaterialOrderDTO? entity { get; set; }

    [Parameter] public string? EntityId { get; set; }
    private List<RawMaterialOrderDetailDTO> orderItems = new List<RawMaterialOrderDetailDTO>();

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrWhiteSpace(EntityId))
        {
            try
            {
                int id = Convert.ToInt32(encryptor.Decrypt(EntityId));
                entity = await service.GetByID(id);
                if (entity != null)
                {
                    orderItems = await service.GetOrderItemDetailByOrderID(id);
                }
            }
            catch (Exception ex) { }
        }
    }
}