@page "/supplier/detail/{EntityId}"

@using OxfoHome.DAL
@using OxfoHome.DAL.DTOs
@using OxfoHome.DAL.Services

<PageTitle>Supplier Details - OxfoHome</PageTitle>

<BackTo Link="/supplier/list" Title="Back to manage suppliers" />

@if (entity != null)
{
    <div class="row">
    <div class="col-lg-8">
        <div class="row">
            <div class="col-sm-6">
                <h3>Supplier Details (@entity.Name)</h3>
            </div>
            <div class="col-sm-6">
                <LinkButton Title="Edit" Link="@($"/supplier/info/{EntityId}")" />
            </div>
        </div>
    </div>
</div>
    <div class="row">
        <div class="col-lg-8">
            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#information"
                        type="button" role="tab" aria-controls="home" aria-selected="true">Supplier Information</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#payments" type="button"
                        role="tab" aria-controls="profile" aria-selected="false">Payment History</button>
                </li>
            </ul>
            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade show active" id="information" role="tabpanel" aria-labelledby="home-tab">
                    <DetailDisplay Data="entity" />
                </div>
                <div class="tab-pane fade" id="payments" role="tabpanel" aria-labelledby="profile-tab">
                    <div class="card">
                        <div class="card-body">
                            <PaymentHistory EntityId="@EntityId" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
}
else
{
    <Loader />
}

@inject ISupplierService service
@inject IEncryptionService encryptor

@code {
    public SupplierDTO? entity { get; set; }

    [Parameter]
    public string? EntityId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrWhiteSpace(EntityId))
        {
            try
            {
                int id = Convert.ToInt32(encryptor.Decrypt(EntityId));
                entity = await service.GetByID(id);
                if (entity == null)
                {
                    //show invalid URL error via toaster
                }
            }
            catch (Exception ex) { }
        }
    }
}