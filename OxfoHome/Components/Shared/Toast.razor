<div class="toast position-fixed bottom-0 end-0 m-3" role="alert" aria-live="assertive" aria-atomic="true"
    style="display: @(IsVisible ? "block" : "none")">
    <div class="toast-header">
        <strong class="me-auto" style="color: @Color">@Title</strong>
        <button type="button" class="btn-close" @onclick="OnClose"></button>
    </div>
    <div class="toast-body">
        @Message
    </div>
</div>

@code {
    [Parameter] public string? Title { get; set; }
    [Parameter] public string? Color { get; set; }
    [Parameter] public string? Message { get; set; }
    private bool IsVisible { get; set; } = false;

    public async void Show(string? title = "", string? message = "", int seconds = 2)
    {
        //set title and message if not empty
        {
            if (!string.IsNullOrWhiteSpace(title))
                Title = title;
            if (!string.IsNullOrWhiteSpace(message))
                Message = message;
        }

        IsVisible = true;
        StateHasChanged();

        // Delay for the specified time before hiding the toast
        await Task.Delay(seconds * 1000);

        HideToast();
    }

    private async void HideToast()
    {
        IsVisible = false;
        await InvokeAsync(StateHasChanged);
    }


    private void OnClose() => IsVisible = false;
}
